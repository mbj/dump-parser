= dump-parser

I found my self doing this several times:

* Start a project where I have to import data from legacy (CSV) formats
* Need to parse strings into various formats (Date,Time,Integer,Symbols,Domain-Specific)
* There are many (more than 40) string based conversion formats per project
* Maintaining this domain knowledge consistent and error free over project lifetime
* Really hate to maintain "a DSL free big clump of sequential and self repeating code"

Goal of this gem is to provide a clean DSL to parse strings (CSV fields) into usable objects.

== Example

  require 'dump-parser'

  DumpParser.register :dd_mm_yyyy_date_time do
    nil_if_empty
    require_format %r(\A(\d{2})\.(\d{2})\.(\d{4})\Z)
    begin
      DateTime.new(match[3].to_i,match[2].to_i,match[1].to_i)
    rescue ArgumentError
      error 'is invalid date'
    end
  end

  DumpParser.register :required_integer do
    require_format %r(\A\d+\Z)
    value.to_i(10)
  end

  DumpParser.execute :dd_mm_yyyy_date_time, ""  # returns nil
  DumpParser.execute :dd_mm_yyyy_date_time, "10.01.1901"  # returns DateTime.new(1901,01,10)
  DumpParser.execute :dd_mm_yyyy_date_time, "invalid"     # raises DumpParser::ParseException.new('dd_mm_yyyy_date: value "invalid" does not match required format')
  DumpParser.execute :dd_mm_yyyy_date_time, "31.02.2011"  # raises DumpParser::ParseException.new('dd_mm_yyyy_date: value "31.02.2011" is invalid date')

== Contributing to dump-parser
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Markus Schirp. See LICENSE for
further details.
